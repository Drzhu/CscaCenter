package com.guide.controller;

import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.ServletOutputStream;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.json.simple.JSONObject;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.guide.pojo.SubmitHospital;
import com.guide.pojo.THunit;
import com.guide.pojo.ZlpgValue;
import com.guide.service.SubmitHospitalService;
import com.guide.service.ZlpgValueService;
import com.guide.util.TxtUtils;

@Controller
@RequestMapping("/2")
public class ProvinceController {

	@Resource(name = "submitHospitalService")
	private SubmitHospitalService submitHospitalService;
	
	@Resource(name = "zlpgValueService")
	private ZlpgValueService zlpgValueService;

	@RequestMapping(value = "main", method = RequestMethod.GET)
	public String p_main(HttpServletRequest request) {
		return "province/main";
	}

	@RequestMapping(value = "hospital", method = RequestMethod.GET)
	public String p_hospital(HttpServletRequest request) {
		return "province/show_hospital";
	}

	@RequestMapping(value = "detail", method = RequestMethod.GET)
	public String p_detail(HttpServletRequest request) {
		return "province/show_detail";
	}
	
	
	
	@SuppressWarnings("unchecked")
	@RequestMapping(value = "datatable_query", method = RequestMethod.GET, produces = "text/plain;charset=UTF-8")
	@ResponseBody
	public String datatable_query(HttpServletRequest request, @RequestParam("search[value]") String search,
			@RequestParam("draw") int draw, @RequestParam("start") int start) throws Exception {
		String str = request.getParameter("search[value]");
		if (str.contains("\"")) {
			str = str.replace(str.substring(str.indexOf("\""), str.length()), "");
		}
		int len = submitHospitalService.query_count(str);
		List<SubmitHospital> list = submitHospitalService.datatable_query(start, str);
		JSONObject json = new JSONObject();
		List<List<String>> list1 = new ArrayList<List<String>>();
		List<String> list2 = new ArrayList<String>();

		for (SubmitHospital i : list) {
			list2.add(i.getCity());
			list2.add(i.getHName());
			list2.add(i.getHlevel());
			list2.add(i.getLinkMan());
			list2.add(i.getJMTel());
			//list2.add("<a href='detail/"+i.getHUnitID()+"'>查看</a>");
			list2.add("<a href='detail'>查看</a>");
			list1.add(list2);
			list2 = new ArrayList<String>();
		}
		json.put("data", list1);
		json.put("recordsTotal", len);
		json.put("recordsFiltered", len);
		json.put("draw", draw);
		return json.toJSONString();
	}
	
	@SuppressWarnings("unchecked")
	@RequestMapping(value = "nosubmit_datatable_query", method = RequestMethod.GET, produces = "text/plain;charset=UTF-8")
	@ResponseBody
	public String nosubmit_datatable_query(HttpServletRequest request, @RequestParam("search[value]") String search,
			@RequestParam("draw") int draw, @RequestParam("start") int start) throws Exception {
		String str = request.getParameter("search[value]");
		if (str.contains("\"")) {
			str = str.replace(str.substring(str.indexOf("\""), str.length()), "");
		}
		int len = submitHospitalService.query_count(str);
		List<SubmitHospital> list = submitHospitalService.datatable_query(start, str);
		JSONObject json = new JSONObject();
		List<List<String>> list1 = new ArrayList<List<String>>();
		List<String> list2 = new ArrayList<String>();

		for (SubmitHospital i : list) {
			list2.add(i.getCity());
			list2.add(i.getHName());
			list2.add(i.getHlevel());
			list2.add(i.getLinkMan());
			list2.add(i.getJMTel());
			list1.add(list2);
			list2 = new ArrayList<String>();
		}
		json.put("data", list1);
		json.put("recordsTotal", len);
		json.put("recordsFiltered", len);
		json.put("draw", draw);
		return json.toJSONString();
	}
	
	/*下载已填表的txt文件*/
	@RequestMapping(value = "txt_submit", method = RequestMethod.GET,produces = "text/plain;charset=UTF-8")
	public void txt_submit(HttpServletRequest request,HttpServletResponse resp,@RequestParam("areaid") String areaid) {
		String file_path = "D://test//pp"+areaid+".txt";
		String content ="";
		List<ZlpgValue> zlpg_list = zlpgValueService.submit_txt(areaid);
		for(ZlpgValue i:zlpg_list){
			content += i.getAreaid()+"\t"+i.getHunitid()+"\r\n";
		}
		TxtUtils.contentToTxt(file_path,content);
		File file = new File(file_path);
		InputStream fin = null;
		ServletOutputStream out = null;
		String fileName=areaid+".txt";
		try {
			fin = new FileInputStream(file);
			resp.setCharacterEncoding("utf-8");
			resp.setContentType("text/plain");
			resp.addHeader("Content-Disposition","attachment;filename="+fileName);
			out = resp.getOutputStream();
			byte[] buffer = new byte[512]; // 缓冲区
			int bytesToRead = -1;
			// 通过循环将读入的Word文件的内容输出到浏览器中
			while ((bytesToRead = fin.read(buffer)) != -1) {
				out.write(buffer, 0, bytesToRead);
			}
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (fin != null)
				try {
					fin.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			if (out != null)
				try {
					out.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			if (file != null)
				file.delete(); // 删除临时文件
		}
	}
	
	/*下载未填表的txt文件*/
	@RequestMapping(value = "txt_nosubmit", method = RequestMethod.GET,produces = "text/plain;charset=UTF-8")
	public void txt_nosubmit(HttpServletRequest request,HttpServletResponse resp,@RequestParam("areaid") String areaid) {
		String file_path = "D://test//pp"+areaid+".txt";
		String content ="";
		List<THunit> zlpg_list = zlpgValueService.nosubmit_txt(areaid);
		for(THunit i:zlpg_list){
			content += i.getCity()+"\t"+i.getHname()+"\t"+i.getHlevel()+"\t"+i.getLinkman()+"\t"+i.getJmtel()+"\r\n";
		}
		TxtUtils.contentToTxt(file_path,content);
		File file = new File(file_path);
		InputStream fin = null;
		ServletOutputStream out = null;
		String fileName=areaid+".txt";
		try {
			fin = new FileInputStream(file);
			resp.setCharacterEncoding("utf-8");
			resp.setContentType("text/plain");
			resp.addHeader("Content-Disposition","attachment;filename="+fileName);
			out = resp.getOutputStream();
			byte[] buffer = new byte[512]; // 缓冲区
			int bytesToRead = -1;
			// 通过循环将读入的Word文件的内容输出到浏览器中
			while ((bytesToRead = fin.read(buffer)) != -1) {
				out.write(buffer, 0, bytesToRead);
			}
		} catch (IOException e) {
			e.printStackTrace();
		} finally {
			if (fin != null)
				try {
					fin.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			if (out != null)
				try {
					out.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			if (file != null)
				file.delete(); // 删除临时文件
		}
	}
}