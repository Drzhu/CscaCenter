package com.guide.controller;

import java.util.HashMap;
import java.util.Iterator;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.guide.pojo.ZVAndZlpgVariable;
import com.guide.pojo.ZlpgVariable;
import com.guide.service.THunitService;
import com.guide.util.JsonUtil;

@Controller
@RequestMapping("/1")
public class HospitalController {

	@Resource(name = "tHunitService")
	private THunitService tHunitService;

	@RequestMapping(value = "main", method = RequestMethod.GET)
	public String h_main(HttpServletRequest request) {
		return "hospital/main";
	}

	@RequestMapping(value = "evaluate", method = RequestMethod.GET)
	public String h_evaluate(HttpServletRequest request) {
		return "hospital/evaluate";
	}
	@RequestMapping(value = "select_Pcode", method = RequestMethod.GET, produces = "text/plain;charset=UTF-8")
	@ResponseBody
	public String select_Pcode(HttpServletRequest request) {
		HashMap<String, List<ZlpgVariable>> map = new HashMap<String, List<ZlpgVariable>>();
		List<ZlpgVariable> pcodeList = tHunitService.select_Pcode();
		map.put("zv", pcodeList);
		return JsonUtil.map2json(map);
	}
	@RequestMapping(value = "update_Pcode", method = RequestMethod.GET, produces = "text/plain;charset=UTF-8")
	@ResponseBody
	public String update_Pcode(@RequestParam("pcode") String pcode, @RequestParam("pcode_value") String pcode_value,
			 HttpServletRequest request, HttpSession session,HttpServletResponse response) {
		HashMap<String, String> map = new HashMap<String, String>();
		String result = "fail";
		try {
			ZVAndZlpgVariable zazv = new ZVAndZlpgVariable();
			zazv.setPcode(pcode);
			Boolean flag = false;
			if("1".equalsIgnoreCase(pcode_value)){
				flag=true;
			}
			zazv.setPcode_value(flag);
			tHunitService.update_Pcode(zazv);
			result = "success";
		} catch (Exception e) {
			e.printStackTrace();
			result = "fail";
		}
		System.out.println(result);
		map.put("result", result);
		return JsonUtil.map2json(map);
	}
}
