package com.guide.controller;

import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.HashMap;

import javax.annotation.Resource;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

import org.apache.log4j.Logger;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.guide.pojo.TUser;
import com.guide.pojo.ZkUser;
import com.guide.service.TUserService;
import com.guide.service.ZkUserService;
import com.guide.util.JsonUtil;

/**
 * @author zhutong
 */
@Controller
@RequestMapping("/")
public class UserController {
	SimpleDateFormat formatter = new SimpleDateFormat("yyyy-MM-dd");
	SimpleDateFormat fmr = new SimpleDateFormat("MM-dd");
	DecimalFormat df = new DecimalFormat();
	@SuppressWarnings("unused")
	private Logger logger;

	@Resource(name = "tUserService")
	private TUserService tUserService;
	
	@Resource(name = "zkUserService")
	private ZkUserService zkUserService;

	public UserController() {
		this.logger = Logger.getLogger(UserController.class);
	}

	// 退出登录
	@RequestMapping(value = "logout", method = RequestMethod.GET)
	public String logout(HttpServletRequest request, HttpSession session) {
		// 删除session登录信息
		session.setAttribute("isLogin", false);
		return "login";
	}

	// 登录验证
	@ResponseBody
	@RequestMapping(value = "Validate_b", method = RequestMethod.POST, produces = "text/plain;charset=UTF-8")
	public String Validate_b(@RequestParam("username") String username, @RequestParam("password") String password,
			 HttpServletRequest request, HttpSession session,HttpServletResponse response) throws Exception {
		HashMap<String, String> map = new HashMap<String, String>();
		ZkUser zkuser = new ZkUser();
		zkuser.setUname(username);
		zkuser.setUpwd(password);
		
		TUser tuser = new TUser();
		tuser.setUname(username);
		tuser.setUpwd(password);
		
		int u =  tUserService.Validate_right(tuser);
		
		int p = zkUserService.Validate_right(zkuser);
		
		if (u != 0) {
			int rid = tUserService.Valicate_user(tuser);
			System.out.println(rid);
			if(rid == 17){
				session.setAttribute("username", username);
				map.put("17", "17");
			}else{
				map.put("error", "error");
			}
		} else if(p!=0){
				map.put("199", "199");
			}else{
				map.put("error", "error");
			}
		return JsonUtil.map2json(map);
	}

}
