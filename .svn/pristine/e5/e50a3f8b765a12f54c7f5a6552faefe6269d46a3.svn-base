### Log4j配置 ###  
### 与Spring结合需要在web.xml中指定此文件位置，并添加监听器 ###  
#定义log4j的输出级别和输出目的地（目的地可以自定义名称，和后面的对应）  
#[ level ] , appenderName1 , appenderName2  
log4j.rootLogger=INFO,Console,File  
#log4j.rootLogger=INFO,Console,File  
#定义日志输出目的地为控制台  
log4j.appender.Console=org.apache.log4j.ConsoleAppender  
log4j.appender.Console.Target=System.out  
log4j.appender.Console.Threshold=DEBUG 
####可以灵活地指定日志输出格式，下面一行是指定具体的格式 ###  
#%c: 输出日志信息所属的类目，通常就是所在类的全名  
#%m: 输出代码中指定的消息,产生的日志具体信息   
#%n: 输出一个回车换行符，Windows平台为"/r/n"，Unix平台为"/n"输出日志信息换行  
log4j.appender.Console.layout = org.apache.log4j.PatternLayout  
log4j.appender.Console.layout.ConversionPattern=[%d{yyyy-MM-dd HH\:mm\:ss}] - %m%n  
  
#文件大小到达指定尺寸的时候产生一个新的文件  
log4j.appender.File = org.apache.log4j.RollingFileAppender  
#指定输出目录  
log4j.appender.File.File = logs/cscacenter.log  
#定义文件最大大小  
log4j.appender.File.MaxFileSize = 10MB  
###输出日志信息###  
#最低级别  
log4j.appender.File.Threshold =ERROR    
log4j.appender.File.layout = org.apache.log4j.PatternLayout  
log4j.appender.File.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\:mm\:ss}][%c]%m%n

#3 druid  
log4j.logger.druid.sql=INFO  
log4j.logger.druid.sql.DataSource=info  
log4j.logger.druid.sql.Connection=info  
log4j.logger.druid.sql.Statement=info  
log4j.logger.druid.sql.ResultSet=info  
   
#4 mybatis 显示SQL语句部分  
#log4j.logger.org.mybatis=DEBUG  
#log4j.logger.java.sql=DEBUG  
#log4j.logger.java.sql.Statement=DEBUG  
#log4j.logger.java.sql.ResultSet=DEBUG  
#log4j.logger.java.sql.PreparedStatement=DEBUG    